class Cubic2VariableFunction {
  p00: number;
  p10: number;
  p01: number;
  p20: number;
  p11: number;
  p02: number;
  p30: number;
  p21: number;
  p12: number;
  p03: number;

  constructor(
    p00: number,
    p10: number,
    p01: number,
    p20: number,
    p11: number,
    p02: number,
    p30: number,
    p21: number,
    p12: number,
    p03: number
  ) {
    this.p00 = p00;
    this.p10 = p10;
    this.p01 = p01;
    this.p20 = p20;
    this.p11 = p11;
    this.p02 = p02;
    this.p30 = p30;
    this.p21 = p21;
    this.p12 = p12;
    this.p03 = p03;
  }

  compute(x: number, y: number): number {
    return (
      this.p00 +
      this.p10 * x +
      this.p01 * y +
      this.p20 * x * x +
      this.p11 * x * y +
      this.p02 * y * y +
      this.p30 * x * x * x +
      this.p21 * x * x * y +
      this.p12 * x * y * y +
      this.p03 * y * y * y
    );
  }
}

function dragAccel_m_s2(ext: number, vel_m_s: number, alt_m: number): number {
  const polys = [
    new Cubic2VariableFunction(
      232.2951,
      244.701,
      -75.1435,
      64.3402,
      -79.522,
      11.7309,
      -0.8306,
      -20.4344,
      9.7041,
      -0.6148
    ),
    new Cubic2VariableFunction(
      235.8993,
      249.21,
      -76.2767,
      65.8251,
      -81.2931,
      12.0289,
      -0.8408,
      -21.0236,
      9.9787,
      -0.7853
    ),
    new Cubic2VariableFunction(
      245.6886,
      260.2967,
      -80.2111,
      69.3746,
      -85.4361,
      12.5705,
      -0.6199,
      -22.1676,
      10.4297,
      -0.6666
    ),
    new Cubic2VariableFunction(
      253.9691,
      270.2409,
      -83.5032,
      72.3919,
      -89.3117,
      13.3189,
      -0.7371,
      -23.2489,
      11.0822,
      -0.7471
    ),
    new Cubic2VariableFunction(
      263.5127,
      280.7695,
      -86.9338,
      75.8929,
      -93.6884,
      14.1591,
      -0.3771,
      -24.5324,
      11.7445,
      -0.9399
    ),
    new Cubic2VariableFunction(
      272.4592,
      290.567,
      -90.104,
      78.881,
      -97.0343,
      14.5126,
      -0.1988,
      -25.6374,
      12.0348,
      -0.7327
    ),
    new Cubic2VariableFunction(
      284.8368,
      304.7727,
      -94.4923,
      82.4469,
      -101.4462,
      15.108,
      -0.6357,
      -26.5433,
      12.4927,
      -0.8323
    ),
    new Cubic2VariableFunction(
      296.2638,
      317.3919,
      -98.5746,
      86.2809,
      -106.2663,
      15.9556,
      -0.5224,
      -28.0106,
      13.2557,
      -0.8541
    ),
    new Cubic2VariableFunction(
      303.1856,
      325.1022,
      -100.9674,
      88.7552,
      -109.3743,
      16.5627,
      -0.4253,
      -28.9892,
      13.8034,
      -0.9447
    ),
    new Cubic2VariableFunction(
      316.4963,
      339.6502,
      -104.557,
      92.4088,
      -114.1954,
      16.9114,
      -0.5681,
      -30.4995,
      13.9269,
      -1.2933
    ),
    new Cubic2VariableFunction(
      340.9146,
      367.152,
      -114.8622,
      101.0439,
      -123.1214,
      18.4047,
      -0.1879,
      -31.8071,
      15.4422,
      -1.1456
    ),
  ];
  const idx = Math.floor(ext * 10);
  const x = (vel_m_s - 273.9) / 148.7;
  const y = (alt_m + 295 - 5000) / 3172;
  if (idx === 10) return polys[10].compute(x, y) / ROCKET_BURNOUT_MASS_KG;
  const a = polys[idx].compute(x, y);
  const b = polys[idx + 1].compute(x, y);
  const shift = ext * 10 - idx;
  const out = shift * b + (1 - shift) * a;
  return Math.max(0, out) / ROCKET_BURNOUT_MASS_KG;
}

const GRAV_AT_SEA_LVL = 9.80665; // m/s^2
const EARTH_MEAN_RADIUS = 6371009; // m
const ROCKET_BURNOUT_MASS_KG = 39.609;

type Accelerations = { ay_m_s2: number; ax_m_s2: number };

function gravitationalAccel_m_s2(altitude_m: number): number {
  return (
    GRAV_AT_SEA_LVL *
    Math.pow(EARTH_MEAN_RADIUS / (EARTH_MEAN_RADIUS + altitude_m), 2)
  );
}

function getAccels(
  extension: number,
  vx_m_s: number,
  vy_m_s: number,
  y_m: number
): Accelerations {
  // Total spee
  const speed_m_s = Math.sqrt(vy_m_s * vy_m_s + vx_m_s * vx_m_s);
  // Acceleration due to drag
  const ad_m_s2 = -dragAccel_m_s2(extension, speed_m_s, y_m);
  // Acceleration due to gravity
  const ag_m_s2 = -gravitationalAccel_m_s2(y_m);
  return {
    ay_m_s2: (ad_m_s2 * vy_m_s) / speed_m_s + ag_m_s2,
    ax_m_s2: (ad_m_s2 * vx_m_s) / speed_m_s,
  };
}

export type RocketState = {
  t_s: number;
  vy_m_s: number;
  vx_m_s: number;
  y_m: number;
};

export const defaultRocketState: RocketState = {
  t_s: 0,
  vy_m_s: 0,
  vx_m_s: 0,
  y_m: 0,
};

function rk4(state: RocketState, h_s: number, extension: number): RocketState {
  let accels = getAccels(extension, state.vx_m_s, state.vy_m_s, state.y_m);
  const ka1 = h_s * state.vy_m_s;
  const kvY1 = h_s * accels.ay_m_s2;
  const kvX1 = h_s * accels.ax_m_s2;

  accels = getAccels(
    extension,
    state.vx_m_s + kvX1 / 2,
    state.vy_m_s + kvY1 / 2,
    state.y_m + ka1 / 2
  );
  const ka2 = h_s * (state.vy_m_s + (h_s * kvY1) / 2);
  const kvY2 = h_s * accels.ay_m_s2;
  const kvX2 = h_s * accels.ax_m_s2;

  accels = getAccels(
    extension,
    state.vx_m_s + kvX2 / 2,
    state.vy_m_s + kvY2 / 2,
    state.y_m + ka2 / 2
  );
  const ka3 = h_s * (state.vy_m_s + (h_s * kvY2) / 2);
  const kvY3 = h_s * accels.ay_m_s2;
  const kvX3 = h_s * accels.ax_m_s2;

  accels = getAccels(
    extension,
    state.vx_m_s + kvX3,
    state.vy_m_s + kvY3,
    state.y_m + ka3
  );
  const ka4 = h_s * (state.vy_m_s + h_s * kvY3);
  const kvY4 = h_s * accels.ay_m_s2;
  const kvX4 = h_s * accels.ax_m_s2;

  return {
    y_m: state.y_m + (ka1 + 2 * ka2 + 2 * ka3 + ka4) / 6,
    vy_m_s: state.vy_m_s + (kvY1 + 2 * kvY2 + 2 * kvY3 + kvY4) / 6,
    vx_m_s: state.vx_m_s + (kvX1 + 2 * kvX2 + 2 * kvX3 + kvX4) / 6,
    t_s: state.t_s + h_s,
  };
}

export function step(
  state: RocketState,
  h_s: number,
  extension: number
): RocketState | null {
  if (state.t_s + h_s <= 9) {
    for (let i = 0; i < openrocketData.length - 1; i++) {
      if (openrocketData[i + 1][0] > state.t_s + h_s) {
        const [t1, y1, vy1, vx1] = openrocketData[i];
        const [t2, y2, vy2, vx2] = openrocketData[i + 1];
        // lerp :P
        const shift = (state.t_s + h_s - t1) / (t2 - t1);
        return {
          y_m: y1 * (1 - shift) + y2 * shift,
          vy_m_s: vy1 * (1 - shift) + vy2 * shift,
          vx_m_s: vx1 * (1 - shift) + vx2 * shift,
          t_s: state.t_s + h_s,
        };
      }
    }
    throw new Error("time is wrong??");
  }
  const s = rk4(state, h_s, extension);
  if (s.y_m < state.y_m) {
    return null;
  }
  return s;
}

const openrocketData = [
  [0.01, -3.863e-4, -0.077, 0.007],
  [0.02, -1.854e-4, -0.037, 0.003],
  [0.03, 1.575e-5, 0.003, 2.763e-4],
  [0.04, 0.001, 0.294, 0.026],
  [0.05, 0.009, 1.119, 0.098],
  [0.06, 0.025, 2.251, 0.197],
  [0.07, 0.054, 3.462, 0.303],
  [0.08, 0.095, 4.75, 0.416],
  [0.09, 0.149, 6.068, 0.531],
  [0.1, 0.216, 7.366, 0.644],
  [0.11, 0.296, 8.647, 0.757],
  [0.12, 0.389, 9.914, 0.867],
  [0.13, 0.495, 11.168, 0.977],
  [0.14, 0.612, 12.412, 1.086],
  [0.15, 0.743, 13.65, 1.194],
  [0.16, 0.885, 14.877, 1.302],
  [0.17, 1.04, 16.086, 1.407],
  [0.18, 1.207, 17.278, 1.512],
  [0.19, 1.386, 18.459, 1.615],
  [0.2, 1.576, 19.635, 1.718],
  [0.21, 1.778, 20.805, 1.82],
  [0.22, 1.992, 21.971, 1.922],
  [0.23, 2.218, 23.131, 2.024],
  [0.24, 2.455, 24.283, 2.125],
  [0.25, 2.703, 25.423, 2.224],
  [0.26, 2.963, 26.551, 2.323],
  [0.27, 3.234, 27.669, 2.421],
  [0.28, 3.517, 28.778, 2.518],
  [0.29, 3.81, 29.882, 2.614],
  [0.3, 4.114, 30.99, 2.711],
  [0.31, 4.43, 32.09, 2.808],
  [0.32, 4.756, 33.172, 2.902],
  [0.33, 5.093, 34.235, 2.995],
  [0.34, 5.441, 35.276, 3.086],
  [0.35, 5.798, 36.291, 3.175],
  [0.36, 6.166, 37.293, 3.263],
  [0.37, 6.544, 38.295, 3.35],
  [0.38, 6.932, 39.296, 3.438],
  [0.39, 7.33, 40.292, 3.525],
  [0.4, 7.738, 41.279, 3.611],
  [0.41, 8.156, 42.261, 3.697],
  [0.42, 8.583, 43.242, 3.783],
  [0.435, 9.243, 44.708, 3.92],
  [0.458, 10.273, 46.864, 4.122],
  [0.491, 11.909, 50.076, 4.422],
  [0.541, 14.53, 54.766, 4.862],
  [0.591, 17.385, 59.418, 5.302],
  [0.641, 20.47, 64.018, 5.744],
  [0.691, 23.785, 68.577, 6.191],
  [0.741, 27.329, 73.171, 6.653],
  [0.791, 31.101, 77.698, 7.122],
  [0.841, 35.098, 82.216, 7.606],
  [0.891, 39.323, 86.763, 8.114],
  [0.941, 43.774, 91.276, 8.642],
  [0.991, 48.451, 95.827, 9.202],
  [1.041, 53.356, 100.368, 9.79],
  [1.091, 58.489, 104.943, 10.416],
  [1.141, 63.851, 109.525, 11.076],
  [1.191, 69.441, 114.082, 11.765],
  [1.241, 75.259, 118.66, 12.488],
  [1.291, 81.307, 123.233, 13.238],
  [1.341, 87.583, 127.806, 14.014],
  [1.391, 94.086, 132.344, 14.801],
  [1.441, 100.817, 136.871, 15.594],
  [1.491, 107.773, 141.394, 16.385],
  [1.541, 114.955, 145.867, 17.158],
  [1.591, 122.36, 150.33, 17.909],
  [1.641, 129.987, 154.776, 18.637],
  [1.691, 137.836, 159.179, 19.335],
  [1.741, 145.904, 163.554, 20.007],
  [1.791, 154.191, 167.905, 20.648],
  [1.841, 162.695, 172.251, 21.264],
  [1.891, 171.415, 176.55, 21.858],
  [1.941, 180.349, 180.846, 22.445],
  [1.991, 189.498, 185.102, 23.027],
  [2.041, 198.858, 189.297, 23.613],
  [2.091, 208.427, 193.465, 24.221],
  [2.141, 218.205, 197.627, 24.859],
  [2.191, 228.189, 201.768, 25.518],
  [2.241, 238.38, 205.85, 26.193],
  [2.291, 248.774, 209.897, 26.885],
  [2.341, 259.369, 213.925, 27.591],
  [2.391, 270.165, 217.932, 28.296],
  [2.441, 281.161, 221.902, 28.987],
  [2.491, 292.355, 225.863, 29.658],
  [2.541, 303.747, 229.792, 30.293],
  [2.591, 315.334, 233.687, 30.893],
  [2.641, 327.115, 237.56, 31.466],
  [2.691, 339.089, 241.407, 32.026],
  [2.741, 351.255, 245.238, 32.594],
  [2.791, 363.612, 249.029, 33.178],
  [2.841, 376.157, 252.775, 33.786],
  [2.891, 388.888, 256.477, 34.425],
  [2.941, 401.804, 260.147, 35.093],
  [2.991, 414.903, 263.798, 35.785],
  [3.041, 428.183, 267.428, 36.48],
  [3.091, 441.645, 271.043, 37.155],
  [3.141, 455.287, 274.624, 37.787],
  [3.191, 469.108, 278.214, 38.368],
  [3.241, 483.108, 281.784, 38.908],
  [3.291, 497.285, 285.304, 39.419],
  [3.341, 511.637, 288.767, 39.924],
  [3.391, 526.161, 292.203, 40.459],
  [3.441, 540.857, 295.619, 41.035],
  [3.491, 555.723, 299.026, 41.659],
  [3.541, 570.758, 302.392, 42.311],
  [3.591, 585.961, 305.714, 42.953],
  [3.641, 601.329, 309.005, 43.557],
  [3.691, 616.861, 312.287, 44.117],
  [3.741, 632.559, 315.598, 44.638],
  [3.791, 648.42, 318.856, 45.131],
  [3.841, 664.445, 322.132, 45.643],
  [3.891, 680.632, 325.343, 46.184],
  [3.941, 696.979, 328.571, 46.774],
  [3.991, 713.487, 331.719, 47.382],
  [4.041, 730.15, 334.823, 47.994],
  [4.091, 746.967, 337.843, 48.572],
  [4.141, 763.936, 340.912, 49.107],
  [4.191, 781.057, 343.942, 49.589],
  [4.241, 798.329, 346.938, 50.051],
  [4.291, 815.75, 349.882, 50.527],
  [4.341, 833.317, 352.789, 51.039],
  [4.391, 851.03, 355.748, 51.601],
  [4.441, 868.891, 358.684, 52.186],
  [4.491, 886.898, 361.595, 52.753],
  [4.541, 905.05, 364.508, 53.274],
  [4.591, 923.35, 367.466, 53.755],
  [4.641, 941.796, 370.38, 54.212],
  [4.691, 960.387, 373.239, 54.68],
  [4.741, 979.119, 376.044, 55.187],
  [4.791, 997.99, 378.816, 55.734],
  [4.841, 1017, 381.56, 56.297],
  [4.891, 1036.146, 384.283, 56.828],
  [4.941, 1055.427, 386.988, 57.311],
  [4.991, 1074.844, 389.67, 57.766],
  [5.041, 1094.394, 392.327, 58.221],
  [5.091, 1114.076, 394.955, 58.694],
  [5.141, 1133.889, 397.552, 59.192],
  [5.191, 1153.83, 400.12, 59.705],
  [5.241, 1173.9, 402.665, 60.203],
  [5.291, 1194.096, 405.19, 60.665],
  [5.341, 1214.418, 407.692, 61.102],
  [5.391, 1234.865, 410.169, 61.537],
  [5.441, 1255.435, 412.616, 61.994],
  [5.491, 1276.126, 415.035, 62.465],
  [5.541, 1296.938, 417.427, 62.939],
  [5.591, 1317.868, 419.793, 63.408],
  [5.641, 1338.916, 422.136, 63.858],
  [5.691, 1360.079, 424.362, 64.275],
  [5.741, 1381.309, 424.836, 64.407],
  [5.791, 1402.552, 424.904, 64.477],
  [5.841, 1423.791, 424.657, 64.515],
  [5.891, 1445.018, 424.423, 64.575],
  [5.941, 1466.239, 424.409, 64.674],
  [5.991, 1487.456, 424.284, 64.729],
  [6.041, 1508.669, 424.247, 64.77],
  [6.091, 1529.881, 424.229, 64.819],
  [6.141, 1551.092, 424.19, 64.89],
  [6.191, 1572.299, 424.105, 64.974],
  [6.241, 1593.497, 423.803, 65.028],
  [6.291, 1614.681, 423.553, 65.077],
  [6.341, 1635.85, 423.204, 65.09],
  [6.391, 1656.996, 422.654, 65.054],
  [6.441, 1678.114, 422.067, 65.013],
  [6.491, 1699.201, 421.393, 64.976],
  [6.541, 1720.244, 420.348, 64.894],
  [6.591, 1741.243, 419.599, 64.876],
  [6.641, 1762.189, 418.256, 64.757],
  [6.691, 1783.067, 416.854, 64.611],
  [6.741, 1803.883, 415.799, 64.498],
  [6.791, 1824.637, 414.354, 64.318],
  [6.841, 1845.315, 412.781, 64.129],
  [6.891, 1865.914, 411.178, 63.953],
  [6.941, 1886.434, 409.604, 63.788],
  [6.991, 1906.874, 408.005, 63.612],
  [7.041, 1927.234, 406.419, 63.429],
  [7.091, 1947.516, 404.837, 63.242],
  [7.141, 1967.718, 403.262, 63.066],
  [7.191, 1987.842, 401.691, 62.898],
  [7.241, 2007.887, 400.123, 62.717],
  [7.291, 2027.854, 398.565, 62.524],
  [7.341, 2047.744, 397.006, 62.332],
  [7.391, 2067.555, 395.44, 62.156],
  [7.441, 2087.288, 393.881, 61.997],
  [7.491, 2106.943, 392.333, 61.835],
  [7.541, 2126.521, 390.782, 61.653],
  [7.591, 2146.021, 389.237, 61.461],
  [7.641, 2165.444, 387.693, 61.274],
  [7.691, 2184.791, 386.155, 61.097],
  [7.741, 2204.06, 384.623, 60.932],
  [7.791, 2223.253, 383.101, 60.769],
  [7.841, 2242.37, 381.587, 60.605],
  [7.891, 2261.412, 380.084, 60.433],
  [7.941, 2280.379, 378.59, 60.254],
  [7.991, 2299.271, 377.105, 60.075],
  [8.041, 2318.089, 375.628, 59.904],
  [8.091, 2336.834, 374.157, 59.742],
  [8.141, 2355.505, 372.693, 59.591],
  [8.191, 2374.104, 371.237, 59.439],
  [8.241, 2392.629, 369.791, 59.282],
  [8.291, 2411.083, 368.355, 59.116],
  [8.341, 2429.465, 366.927, 58.944],
  [8.391, 2447.776, 365.508, 58.772],
  [8.441, 2466.016, 364.094, 58.615],
  [8.491, 2484.185, 362.686, 58.472],
  [8.541, 2502.284, 361.285, 58.328],
  [8.591, 2520.314, 359.894, 58.175],
  [8.641, 2538.274, 358.512, 58.015],
  [8.691, 2556.165, 357.139, 57.851],
  [8.741, 2573.988, 355.772, 57.692],
  [8.791, 2591.742, 354.412, 57.545],
  [8.841, 2609.429, 353.057, 57.408],
  [8.891, 2627.048, 351.71, 57.272],
  [8.941, 2644.6, 350.371, 57.13],
  [8.991, 2662.086, 349.042, 56.981],
  [9.041, 2679.509, 347.937, 56.866],
];
